import { requireRole } from '../../utils/rbac.js'; import { randomUUID } from 'node:crypto'; import fs from 'node:fs/promises'; import path from 'node:path'; export default defineEventHandler(async(e)=>{ requireRole(e,'EDITOR'); const cfg=useRuntimeConfig(); const url=new URL(getRequestURL(e)); const type=(url.searchParams.get('type')||'video').toLowerCase(); if(!['image','video'].includes(type)) throw createError({status:400,message:'type must be image|video'}); const rel=(url.searchParams.get('path')||'').replace(/(^\/+|\.\.)/g,''); const name=(url.searchParams.get('name')||'').replace(/\//g,''); const id=randomUUID(); const dir=path.posix.join(cfg.mediaRoot,'tmp_uploads',id); await fs.mkdir(dir,{recursive:true}); await fs.writeFile(path.posix.join(dir,'meta.json'), JSON.stringify({type,rel,name})); return { uploadId:id } })
